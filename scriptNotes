A call for research: General Recursive Solving Engines (PhD thesis update)

If we write code and something feels repetitive, we know that something is off. Yet we often choose to ignore that feeling because time is running. We feel frustrated when working on results we know will never be used by someone other than ourselves, yet we choose not to diverge to the bigger picture because we might not deliver fast enough. Imagine were allowed to work on a technology that solves these issues. Imagine we would find a way to create a tool and database that not only shares plain text or concrete code, but that captures our ideas while we work and automatically lets us access and use the principles of others to create code, sentences and analysis. Imagine that tool could grow so strong we wouldn't need to write imperative code any more because we have long figured out how to automatically untangle a logical specification.
In the course of my PhD, I stumbled across a technology that has long been only subject to science fiction, but that suddenly comes within reach of being actually buildable. The concept is so strong that I think it is time that we diverge more of computer science research resources into getting it to run. 
